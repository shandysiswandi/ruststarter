//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.14

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "mfa_backup_codes")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: i64,
    pub mfa_factor_id: i64,
    #[sea_orm(column_type = "Text")]
    pub hashed_code: String,
    pub is_used: bool,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::mfa_factors::Entity",
        from = "Column::MfaFactorId",
        to = "super::mfa_factors::Column::Id",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    MfaFactors,
}

impl Related<super::mfa_factors::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::MfaFactors.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
